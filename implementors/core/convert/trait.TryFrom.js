(function() {var implementors = {
"autoupdater":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.65.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"enum\" href=\"autoupdater/parsing/enum.Platform.html\" title=\"enum autoupdater::parsing::Platform\">Platform</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.str.html\">str</a>&gt; for <a class=\"enum\" href=\"autoupdater/parsing/enum.Platform.html\" title=\"enum autoupdater::parsing::Platform\">Platform</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.65.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"enum\" href=\"autoupdater/parsing/enum.ComponentName.html\" title=\"enum autoupdater::parsing::ComponentName\">ComponentName</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.str.html\">str</a>&gt; for <a class=\"enum\" href=\"autoupdater/parsing/enum.ComponentName.html\" title=\"enum autoupdater::parsing::ComponentName\">ComponentName</a>"]],
"firmware_protocol":[["impl&lt;D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"firmware_protocol/struct.Packet.html\" title=\"struct firmware_protocol::Packet\">Packet</a>&lt;D&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;for&lt;'a&gt; D: DekuRead&lt;'a, (Endian, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.u32.html\">u32</a>)&gt; + DekuWrite&lt;(Endian, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.u32.html\">u32</a>)&gt;,</span>"],["impl&lt;D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"firmware_protocol/struct.Packet.html\" title=\"struct firmware_protocol::Packet\">Packet</a>&lt;D&gt;&gt; for BitVec&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.u8.html\">u8</a>, Msb0&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;for&lt;'a&gt; D: DekuRead&lt;'a, (Endian, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.u32.html\">u32</a>)&gt; + DekuWrite&lt;(Endian, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.u32.html\">u32</a>)&gt;,</span>"],["impl&lt;D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"firmware_protocol/struct.Packet.html\" title=\"struct firmware_protocol::Packet\">Packet</a>&lt;D&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.65.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.u8.html\">u8</a>&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;for&lt;'a&gt; D: DekuRead&lt;'a, (Endian, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.u32.html\">u32</a>)&gt; + DekuWrite&lt;(Endian, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.u32.html\">u32</a>)&gt;,</span>"]],
"skeletal_model":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"enum\" href=\"skeletal_model/bone/bone_kind/enum.BoneKind.html\" title=\"enum skeletal_model::bone::bone_kind::BoneKind\">BoneKind</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"enum\" href=\"skeletal_model/bone/bone_kind/enum.BoneKind.html\" title=\"enum skeletal_model::bone::bone_kind::BoneKind\">BoneKind</a>"],["impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.65.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;<a class=\"enum\" href=\"skeletal_model/bone/bone_kind/enum.BoneKind.html\" title=\"enum skeletal_model::bone::bone_kind::BoneKind\">BoneKind</a>, T, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.65.0/std/collections/hash/map/struct.RandomState.html\" title=\"struct std::collections::hash::map::RandomState\">RandomState</a>&gt;&gt; for <a class=\"struct\" href=\"skeletal_model/bone/struct.BoneMap.html\" title=\"struct skeletal_model::bone::BoneMap\">BoneMap</a>&lt;T&gt;"]],
"slimevr_overlay":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"enum\" href=\"slimevr_overlay/model/bone_kind/enum.BoneKind.html\" title=\"enum slimevr_overlay::model::bone_kind::BoneKind\">BoneKind</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"enum\" href=\"slimevr_overlay/model/bone_kind/enum.BoneKind.html\" title=\"enum slimevr_overlay::model::bone_kind::BoneKind\">BoneKind</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;BodyPart&gt; for <a class=\"enum\" href=\"slimevr_overlay/model/bone_kind/enum.BoneKind.html\" title=\"enum slimevr_overlay::model::bone_kind::BoneKind\">BoneKind</a>"],["impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.65.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;<a class=\"enum\" href=\"slimevr_overlay/model/bone_kind/enum.BoneKind.html\" title=\"enum slimevr_overlay::model::bone_kind::BoneKind\">BoneKind</a>, T, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.65.0/std/collections/hash/map/struct.RandomState.html\" title=\"struct std::collections::hash::map::RandomState\">RandomState</a>&gt;&gt; for <a class=\"struct\" href=\"slimevr_overlay/model/bone_map/struct.BoneMap.html\" title=\"struct slimevr_overlay::model::bone_map::BoneMap\">BoneMap</a>&lt;T&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()